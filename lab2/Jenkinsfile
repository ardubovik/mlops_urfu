pipeline {
    agent any

    stages {
        stage('Setup environment') {
            steps {
                script {
                    echo 'creating a virtual environment, if not already created'
                    sh '''
                        if [ ! -d ".venv" ]; then
                            env_name=${1:-".venv"}
                            python3 -m venv "$env_name"
                            echo "virtual environment '$env_name' has been created"
                        fi
                    '''

                    echo 'activating virtual environment'
                    sh '''
                        env_name=${1:-".venv"}
                        if [ ! -d "$env_name" ]; then
                            echo "virtual environment '$env_name' not found, use '$0 create [env_name]' to create"
                            return 1
                        fi
                        if [ -z "$VIRTUAL_ENV" ]; then
                            chmod +x ./$env_name/bin/activate
                            ./$env_name/bin/activate
                            echo "virtual environment '$env_name' is activated"
                        else
                            echo "virtual environment has already been activated"
                        fi
                    '''

                    echo 'install dependencies'
                    sh '''
                        if [ ! -f "requirements.txt" ]; then
                            echo "file requirements.txt not found"
                            return 1
                        fi

                        # check if all dependencies from requirements.txt are installed
                        for package in $(cat requirements.txt | cut -d '=' -f 1); do
                            if ! pip freeze | grep -q "^$package=="; then
                                echo "dependency installation:.."
                                ls
                                echo "dependencies installed"
                                return 0
                            fi
                        done
                        echo "all dependencies are already installed"
                    '''
                }
            }
        }
    }
    post {
        always {
            echo 'Pipeline has finished.'
        }
        success {
            echo 'Pipeline completed successfully.'
        }
        failure {
            echo 'Pipeline failed.'
        }
    }
}